name: CI
on:
  push:
    paths:
      - .github/workflows/build.yml
      - shell/**
      - .dockerignore
      - Dockerfile
  pull_request:
    paths:
      - .github/workflows/build.yml
      - shell/**
      - .dockerignore
      - Dockerfile
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  
jobs:
  verify:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v4

      - name: Build final image
        run: docker build .

  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: dotwee
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          password: ${{ secrets.GITHUB_TOKEN }}
          username: dotwee

      - name: Set variables
        id: vars
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          TAG=${GITHUB_REF#refs/tags/}
          echo ::set-output name=commit::$(git rev-parse --short HEAD)
          echo ::set-output name=build_date::$(date -u +%Y-%m-%dT%H:%M:%SZ)
          if [ "$TAG" != "$GITHUB_REF" ]; then
            echo ::set-output name=version::$TAG
            echo ::set-output name=platforms::linux/amd64,linux/arm64
          elif [ "$BRANCH" = "master" ]; then
            echo ::set-output name=version::latest
            echo ::set-output name=platforms::linux/amd64,linux/arm64
          else
            echo ::set-output name=version::$BRANCH
            echo ::set-output name=platforms::linux/amd64,linux/arm64
          fi

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            dotwee/latexdevcontainer
            ghcr.io/dotwee/latexdevcontainer
          tags: |
            type=raw,value=${{ steps.vars.outputs.version }}
          labels: |
            maintainer=Lukas Wolfsteiner <lukas@wolfsteiner.media>
            org.opencontainers.image.title=latexdevcontainer
            org.opencontainers.image.source="https://github.com/${{ github.repository }}"

      - name: Build and push scheme-basic image
        uses: docker/build-push-action@v4
        with:
          platforms: ${{ steps.vars.outputs.platforms }}
          build-args: |
            BUILD_DATE=${{ steps.vars.outputs.build_date }}
            COMMIT=${{ steps.vars.outputs.commit }}
            VERSION=${{ steps.vars.outputs.version }}
            SCHEME=scheme-basic
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push scheme-full image
        uses: docker/build-push-action@v4
        with:
          platforms: ${{ steps.vars.outputs.platforms }}
          build-args: |
            BUILD_DATE=${{ steps.vars.outputs.build_date }}
            COMMIT=${{ steps.vars.outputs.commit }}
            VERSION=${{ steps.vars.outputs.version }}
            SCHEME=scheme-full
          tags: |
            dotwee/latexdevcontainer:${{ steps.vars.outputs.version }}-full
          push: true
          labels: ${{ steps.meta.outputs.labels }}
